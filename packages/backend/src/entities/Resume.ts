import { 
  Entity, 
  Column, 
  ManyToOne, 
  JoinColumn,
  OneToMany,
  Index
} from 'typeorm'

import { BaseEntity } from '../core/BaseEntity'

import { JobApplication } from './JobApplication'
import { User } from './User'

/**
 * Enum defining the sources from which resumes can originate.
 * Used for analytics and filtering purposes.
 */
export enum ResumeSource {
  /** Resume uploaded directly by the user */
  UPLOAD = 'Upload',
  /** Resume imported from Google Drive integration */
  GOOGLE_DRIVE = 'Google Drive',
  /** Resume generated by the application (AI/templates) */
  GENERATED = 'Generated'
}

/**
 * Resume entity representing user-uploaded or generated resume files.
 *
 * Features:
 * - Multiple source types (upload, Google Drive, generated)
 * - Usage tracking with application count and last used date
 * - Version management with unique version names per user
 * - Secure file storage with URL references
 * - Job application relationship tracking
 *
 * Indexes:
 * - versionName: Optimizes searches and uniqueness constraints
 * - Combined (user_id, versionName): Enforces per-user unique version names
 *
 * Security: All resumes are user-scoped via foreign key relationship.
 */
@Entity('resumes')
export class Resume extends BaseEntity {
  /**
   * Human-readable version name for the resume (e.g., "Software Engineer v2").
   * Must be unique per user. Used for identification and organization.
   */
  @Column()
  @Index()
  versionName: string

  /**
   * Original filename as uploaded by user.
   * Preserved for download headers and user reference.
   */
  @Column()
  fileName: string

  /**
   * Secure file path or URL for resume storage.
   * May be local filesystem path or cloud storage URL.
   */
  @Column()
  fileUrl: string

  /**
   * Source of the resume (Upload/Google Drive/Generated).
   * Used for analytics and filtering. Defaults to manual upload.
   */
  @Column({
    type: 'enum',
    enum: ResumeSource,
    default: ResumeSource.UPLOAD
  })
  source: ResumeSource

  /**
   * Date when resume was first uploaded or created.
   * Automatically set to current date on creation.
   */
  @Column({ type: 'date', default: () => 'CURRENT_DATE' })
  uploadDate: Date

  /**
   * Date when resume was last used in a job application.
   * Used for recent activity analytics and filtering.
   * Null if never used in applications.
   */
  @Column({ type: 'date', nullable: true })
  lastUsedDate?: Date

  /**
   * Number of job applications this resume has been used for.
   * Incremented automatically when linked to applications.
   * Used for "most used" analytics.
   */
  @Column({ default: 0 })
  applicationCount: number

  /**
   * Optional user notes about this resume version.
   * May include details about customizations, target roles, etc.
   */
  @Column({ type: 'text', nullable: true })
  notes?: string

  /**
   * External system identifier (e.g., Google Drive file ID).
   * Used for integration sync and external system references.
   */
  @Column({ nullable: true })
  externalId?: string

  /**
   * Owner of this resume. Enforces user-scoped access.
   * Cannot be null - every resume must belong to a user.
   */
  @ManyToOne(() => User, user => user.resumes, { nullable: false })
  @JoinColumn({ name: 'user_id' })
  user: User

  /**
   * Job applications that have used this resume.
   * Loaded on demand for analytics and relationship tracking.
   */
  @OneToMany(() => JobApplication, jobApplication => jobApplication.resume)
  jobApplications: JobApplication[]
}